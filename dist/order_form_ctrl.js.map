{"version":3,"sources":["../src/order_form_ctrl.js"],"names":["showOrderEditingForm","data","rowData","getProductsAndEquipments","callback","appEvents","emit","src","modalClass","model","tryCatchCount","tryCatchCtrl","removeListeners","addListeners","setTimeout","startCtrl","e","console","log","$","trigger","utils","alert","enableInstantSearch","products","equipment","datepicker","orientation","todayBtn","format","autoclose","prefillData","productsUrl","postgRestHost","equipmentsUrl","get","then","res","catch","val","order_id","order_qty","production_line","product_id","product_desc","order_date","planned_rate","updateDuration","document","on","serializeArray","submitOrder","value","off","qty","rate","durationHrs","parseInt","momentDuration","moment","duration","durationText","getDurationText","month","days","hrs","mins","text","min","inputValues","orderId","orderQty","productionLine","product","date","plannedRate","isValueValid","url","influxHost","hasTagsChanged","updateWithTagsChanged","updateWithTagsUnchanged","input","newLine","writeInfluxLine","oldLine","writeOldInfluxLine","post","error","line","undefined","inputs","split","dateRegExp","RegExp","prodList","reduce","arr","p","str","push","productionLineList","equ","site","area","distinctElems","indexOf","test","join","completion_qty","machine_state","scrap_qty","setpoint_rate","bootstrap_datepicker","_orderDurationHours"],"mappings":"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","file":"order_form_ctrl.js","sourcesContent":["import * as utils from './utils'\nimport moment from 'moment'\nimport { appEvents } from 'app/core/core'\nimport { enableInstantSearch } from './instant_search_ctrl'\nimport  * as bootstrap_datepicker  from './libs/bootstrap-datepicker'\n\nlet products\nlet equipment\nlet rowData\nlet tryCatchCount = 1\nlet _orderDurationHours\n\n/**\n * This function is the entry point to show the order editing form\n * It accepts one param, with is called 'data'\n * This 'data' is empty when the user clicks the create icon to create a new order\n * This 'data' is not empty when the user clicks the row to edit the order, and the form will be pre-fill based on the data passed in\n * @param {*} data\n */\nfunction showOrderEditingForm (data) {\n\n  rowData = data\n  \n  getProductsAndEquipments(callback)\n\n  function callback () {\n\n    appEvents.emit('show-modal', {\n        src: 'public/plugins/smart-factory-scheduler-order-mgt-table-panel/partials/order_form.html',\n        modalClass: 'confirm-modal',\n        model: {}\n    })\n\n    tryCatchCount = 1\n    tryCatchCtrl()\n\n    removeListeners()\n    addListeners()\n  }\n}\n\n/**\n * Try enable the insatnt search function and the datepicker\n * Re-try if it fails\n * Stop and prompt error if it fails more than 15 times\n */\nfunction tryCatchCtrl(){\n  setTimeout(() => {\n    try {\n      startCtrl()\n    } catch (e) {\n      if (tryCatchCount < 15) {\n        tryCatchCtrl()\n        console.log('Re-init: ' + tryCatchCount);\n        tryCatchCount ++\n      }else {\n        console.log(e)\n        $('#order-mgt-scheduler-form-cancelBtn').trigger('click')\n        utils.alert('error', 'Error', 'Form initialisation failed, please try agian')\n      }\n    }\n  }, 200);\n}\n\n/**\n * Enable instant search function and the datepicker\n */\nfunction startCtrl(){\n  enableInstantSearch(products, equipment)\n  $('#datepicker').datepicker({\n      orientation: 'top',\n      todayBtn: 'linked',\n      format: 'yyyy-mm-dd',\n      autoclose: true,\n  })\n\n  prefillData()\n}\n\n/**\n * Get the product list and production line list from postgresql\n * Call the callback fn passed in once it is finished\n * Stop and prompt error when it fails\n * @param {fn} callback \n */\nfunction getProductsAndEquipments (callback) {\n  let productsUrl = utils.postgRestHost + 'products'\n  let equipmentsUrl = utils.postgRestHost + 'equipment?production_line=not.is.null'\n\n  utils.get(productsUrl)\n    .then(res => {\n      products = res\n      utils.get(equipmentsUrl)\n        .then(res => {\n          equipment = res\n          callback()\n        })\n        .catch(e => {\n          console.log(e)\n          utils.alert('error', 'Error', 'An error occurred while fetching data from the postgresql, please check the basebase connection')\n        })\n    })\n    .catch(e => {\n      console.log(e)\n      utils.alert('error', 'Error', 'An error occurred while fetching data from the postgresql, please check the basebase connection')\n    })\n}\n\n/**\n * Pre-fiil the information when it comes with data (When the user clicks the row)\n */\nfunction prefillData(){\n  if (rowData) {\n    // console.log('need to pre-fill')\n    $('input.ord-mgt-datalist-input#order-id').val(rowData.order_id)\n    $('input.ord-mgt-datalist-input#order-qty').val(rowData.order_qty)\n    $('input.ord-mgt-datalist-input#datalist-input-production-line').val(rowData.production_line)\n    $('input.ord-mgt-datalist-input#datalist-input-products').val(rowData.product_id + ' | ' + rowData.product_desc)\n    $('input.ord-mgt-datalist-input#datepicker').val(rowData.order_date)\n    $('input.ord-mgt-datalist-input#planned-rate').val(rowData.planned_rate)\n    updateDuration(rowData.order_qty, rowData.planned_rate)\n  }\n}\n\n/**\n * Add click event listener for the submit btn\n */\nfunction addListeners(){\n  $(document).on('click', 'button#order-mgt-scheduler-form-submitBtn', e => {\n    let data = $('form#order-mgt-scheduler-form').serializeArray()\n    submitOrder(data)\n  })\n\n  $(document).on('input', 'input#planned-rate, input#order-qty', e => {\n    let data = $('form#order-mgt-scheduler-form').serializeArray()\n    updateDuration(data[1].value, data[5].value)\n  })\n}\n\n/**\n * Remove the click event listner for the submit btn\n */\nfunction removeListeners(){\n  $(document).off('click', 'button#order-mgt-scheduler-form-submitBtn')\n  $(document).off('input', 'input#planned-rate, input#order-qty')\n}\n\nfunction updateDuration(qty, rate){\n\n  if (qty !== \"\" && rate !== \"\") {\n    let durationHrs = parseInt(qty) / parseInt(rate)\n    let momentDuration = moment.duration(durationHrs, 'hours')\n\n    let durationText = getDurationText(momentDuration)\n    \n    $('input.ord-mgt-datalist-input#duration').val(durationText)\n  }else {\n    $('input.ord-mgt-datalist-input#duration').val('')\n  }\n}\n\nfunction getDurationText(momentDuration) {\n  let month = momentDuration.get('month')\n  let days = momentDuration.get('d')\n  let hrs = momentDuration.get('h')\n  let mins = momentDuration.get('minute')\n  let text = ''\n\n  if (month > 0) {return 'Over a month!'}\n\n  if (days !== 0) { hrs += days * 24 }\n\n  if (hrs !== 0 && mins !== 0) {\n    text = hrs + ' hour(s) & ' + mins + ' minute(s)'\n  }else if (hrs !== 0 && mins === 0){\n    text = hrs + ' hour(s)'\n  }else if (hrs === 0 && mins !== 0){\n    text = min + ' minute(s)'\n  }\n  \n  return text\n}\n\n/**\n * Expect the form data and then check if the form data is valid\n * If data is valid, check if the tags are changed, simply update the record if tags are unchanged\n * Or create a new record with the validated form data then update the old record's status as 'Replaced'\n * @param {*} data \n */\nfunction submitOrder(data) {\n  \n  const inputValues = {\n    orderId: data[0].value, \n    orderQty: data[1].value, \n    productionLine: data[2].value, \n    product: data[3].value, \n    date: data[4].value, \n    plannedRate: data[5].value,\n    duration: data[6].value\n  }\n\n  if (isValueValid(inputValues)) {\n    const url = utils.influxHost + 'write?db=smart_factory'\n    if (hasTagsChanged(inputValues)) {\n      updateWithTagsChanged(url, inputValues)\n    }else {\n      updateWithTagsUnchanged(url, inputValues)\n    }\n  }\n\n}\n\n/**\n * Send Post request to write the influxdb with the url passed in and the line later created\n * Create a new record with the validated input\n * Update the old record as 'Replaced'\n * Stop and prompt error when it fails\n * @param {*} url \n * @param {*} input \n */\nfunction updateWithTagsChanged(url, input){\n\n  const newLine = writeInfluxLine(input)\n  const oldLine = writeOldInfluxLine()\n  utils.post(url, newLine).then(() => {\n    utils.post(url, oldLine).then(() => {\n      utils.alert('success', 'Success', 'Order has been successfully updated')\n      $('#order-mgt-scheduler-form-cancelBtn').trigger('click')\n    }).catch(error => {\n      console.log(error)\n      utils.alert('error', 'Database Error', 'An error occurred while updating data to the influxdb, please check the basebase connection')\n      $('#order-mgt-scheduler-form-cancelBtn').trigger('click')\n    })\n  }).catch(error => {\n      console.log(error)\n      utils.alert('error', 'Database Error', 'An error occurred while updating data to the influxdb, please check the basebase connection')\n      $('#order-mgt-scheduler-form-cancelBtn').trigger('click')\n  })\n\n}\n\n/**\n * Send Post request to write the influxdb with the url passed in and the line later created\n * Simply update the record\n * Stop and prompt error when it fails\n * @param {*} url \n * @param {*} input \n */\nfunction updateWithTagsUnchanged(url, input){\n\n  const line = writeInfluxLine(input)\n  utils.post(url, line).then(res => {\n    utils.alert('success', 'Success', (rowData !== '' && rowData !== undefined) ? 'Order has been successfully updated' : 'Order has been successfully created')\n    $('#order-mgt-scheduler-form-cancelBtn').trigger('click')\n  }).catch(e => {\n    console.log(e)\n    utils.alert('error', 'Database Error', 'An error occurred while updating data to the influxdb, please check the basebase connection')\n    $('#order-mgt-scheduler-form-cancelBtn').trigger('click')\n  })\n\n}\n\n/**\n * Expect the user inputs\n * Compare the user inputs and the globe scope var called 'rowData'\n * Check if the user inputs is different from the rowData to determine if the Tags are changed\n * @param {*} inputs \n */\nfunction hasTagsChanged(inputs) {\n  \n  if (!rowData) {\n    //if there is no rowData, meaning that the user is creating a new order, so return false\n    return false\n  }\n  const product_id = inputs.product.split(' | ')[0]\n  const product_desc = inputs.product.split(' | ')[1]\n  return (\n    inputs.orderId !== rowData.order_id \n    || product_id !== rowData.product_id \n    || product_desc !== rowData.product_desc\n  )\n}\n\n/**\n * Expect the user inputs\n * Check if the user inputs are valid\n * Stop and prompt error if the inputs are not valid\n * @param {*} data \n */\nfunction isValueValid(data) {\n\n  const dateRegExp = new RegExp('^[0-9]{4}-(((0[13578]|(10|12))-(0[1-9]|[1-2][0-9]|3[0-1]))|(02-(0[1-9]|[1-2][0-9]))|((0[469]|11)-(0[1-9]|[1-2][0-9]|30)))$')\n  const prodList = products.reduce((arr, p) => {\n    const str = p.product_id + ' | ' + p.product_desc\n    arr.push(str)\n    return arr\n  }, [])\n\n  let productionLineList = equipment.reduce((arr, equ) => {\n    arr.push(equ.site + ' | ' + equ.area + ' | ' + equ.production_line)\n    return arr\n  }, [])  \n  productionLineList = utils.distinctElems(productionLineList)\n\n  if (data.orderId === '') {\n    utils.alert('warning', 'Warning', 'Order Number Empty, please enter the Order Number')\n    return false\n  }\n\n  if (data.orderQty === '') {\n    utils.alert('warning', 'Warning', 'Order Quantity Empty, please enter the Order Quantity')\n    return false\n  }\n\n  if (data.productionLine === '') {\n    utils.alert('warning', 'Warning', 'Production Line Empty, please enter the Production Line')\n    return false\n  }else {\n    if (productionLineList.indexOf(data.productionLine) === -1) {\n      utils.alert('warning', 'Warning', 'Production Line Not Exist, please select a Production Line from the Production Line List')\n      return false\n    }\n  }\n\n  if (data.product === '') {\n    utils.alert('warning', 'Warning', 'Product Empty, please enter the Product')\n    return false\n  }else {\n    if (prodList.indexOf(data.product) === -1) {\n      utils.alert('warning', 'Warning', 'Product Not Exist, please select a Product from the Product List')\n      return false\n    }\n  }\n\n  if (!dateRegExp.test(data.date)) {\n    utils.alert('warning', 'Warning', 'Scheduled Start Date Empty or Invalid Date Format, please choose a date from the date picker')\n    return false\n  }\n\n  if (data.plannedRate === '') {\n    utils.alert('warning', 'Warning', 'Planned Rate Empty, please enter the Planned Rate')\n    return false\n  }\n\n  return true\n}\n\n/**\n * Expect the validated user inputs\n * Write line to update the record with the user inputs passed in\n * @param {*} data \n */\nfunction writeInfluxLine (data) {\n  const product_id = data.product.split(' | ')[0]\n  let product_desc = data.product.split(' | ')[1]\n  \n  //For influxdb tag keys, must add a forward slash \\ before each space \n  product_desc = product_desc.split(' ').join('\\\\ ')\n\n  let line = 'OrderPerformance,order_id=' + data.orderId + ',product_id=' + product_id + ',product_desc=' + product_desc + ' '\n\n  //+ ',production_line=' + data.productionLine\n\n  if (rowData) {\n    if (rowData.completion_qty !== null && rowData.completion_qty !== undefined) {\n      line += 'compl_qty=' + rowData.completion_qty + ','\n    }\n    if (rowData.machine_state !== null && rowData.machine_state !== undefined) {\n      line += 'machine_state=\"' + rowData.machine_state + '\"' + ','\n    }\n    if (rowData.scrap_qty !== null && rowData.scrap_qty !== undefined) {\n      line += 'scrap_qty=' + rowData.scrap_qty + ','\n    }\n  }\n\n  line += 'order_state=\"' + 'Planned' + '\"' + ','\n  line += 'order_date=\"' + data.date + '\"' + ','\n  line += 'production_line=\"' + data.productionLine + '\"' + ','\n  line += 'order_qty=' + data.orderQty + ','\n  line += 'setpoint_rate=' + 0 + ','\n  line += 'planned_rate=' + data.plannedRate\n\n  // console.log(line);\n  return line\n}\n\n/**\n * Write line to changed the record's status to 'Replaced'\n */\nfunction writeOldInfluxLine(){\n    //For influxdb tag keys, must add a forward slash \\ before each space \n    let product_desc = rowData.product_desc.split(' ').join('\\\\ ')\n  \n    let line = 'OrderPerformance,order_id=' + rowData.order_id + ',product_id=' + rowData.product_id + ',product_desc=' + product_desc + ' '\n  \n    if (rowData.completion_qty !== null && rowData.completion_qty !== undefined) {\n      line += 'completion_qty=' + rowData.completion_qty + ','\n    }\n    if (rowData.machine_state !== null && rowData.machine_state !== undefined) {\n      line += 'machine_state=\"' + rowData.machine_state + '\"' + ','\n    }\n    if (rowData.scrap_qty !== null && rowData.scrap_qty !== undefined) {\n      line += 'scrap_qty=' + rowData.scrap_qty + ','\n    }\n    if (rowData.setpoint_rate !== null && rowData.setpoint_rate !== undefined) {\n      line += 'setpoint_rate=' + rowData.setpoint_rate + ','\n    }\n\n  \n    line += 'order_state=\"' + 'Replaced' + '\"' + ','\n    line += 'order_date=\"' + rowData.order_date + '\"' + ','\n    line += 'production_line=\"' + data.productionLine + '\"' + ','\n    line += 'order_qty=' + rowData.order_qty + ','\n    line += 'planned_rate=' + rowData.planned_rate\n  \n    // console.log(line);\n    return line\n}\n\nexport { showOrderEditingForm }\n"]}