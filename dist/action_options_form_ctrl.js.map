{"version":3,"sources":["../src/action_options_form_ctrl.js"],"names":["showActionOptionsForm","productionLine","orderId","productDesc","productId","tags","prodLine","prodDesc","prodId","getRowData","callback","rowData","order_state","toLowerCase","utils","alert","appEvents","emit","src","modalClass","model","removeListeners","addListeners","url","getInfluxLine","console","log","get","then","formatData","res","catch","e","desc","split","join","influxHost","cols","results","series","columns","rows","values","row","length","data","i","col","$","document","on","target","id","showOrderEditingForm","closeForm","updateOrder","off","action","line","writeInfluxLine","post","status","product_desc","production_line","order_id","product_id","completion_qty","undefined","machine_state","scrap_qty","setpoint_rate","order_date","order_qty","planned_rate","trigger"],"mappings":"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","file":"action_options_form_ctrl.js","sourcesContent":["import { showOrderEditingForm } from './order_form_ctrl'\nimport { appEvents } from 'app/core/core'\nimport * as utils from './utils'\n\nlet rowData\nconst closeForm = () => {\n  $('a#order-mgt-scheduler-action-option-close-btn').trigger('click')\n}\n\n/**\n * Expect four params which are the tags values and are for querying the record data\n * Show the action options form once the query is finished\n * Remove listener and then add listener, which is to prevent listeners duplication\n * @param {*} productionLine \n * @param {*} orderId \n * @param {*} productDesc \n * @param {*} productId \n */\nfunction showActionOptionsForm(productionLine, orderId, productDesc, productId){\n  //get data\n  let tags = {prodLine: productionLine, orderId: orderId, prodDesc: productDesc, prodId: productId}\n  getRowData(callback, tags)\n\n  function callback(){\n    if(rowData.order_state.toLowerCase() !== 'planned' && rowData.order_state.toLowerCase() !== 'ready'){\n      utils.alert('warning', 'Warning', 'This order is ' + rowData.order_state + ' and is no longer available for editing')\n      return\n    }\n\n    appEvents.emit('show-modal', {\n      src: 'public/plugins/smart-factory-scheduler-order-mgt-table-panel/partials/action_options.html',\n      modalClass: 'confirm-modal',\n      model: {}\n    })\n\n    removeListeners()\n    addListeners()\n  }\n}\n\n/**\n * Get the record data with the tag values passed in\n * Call the callback function once it is finished\n * Stop and prompt error when it fails\n * @param {*} callback \n * @param {*} tags \n */\nfunction getRowData(callback, tags){\n  const url = getInfluxLine(tags)\n  console.log(url);\n  console.log(tags);\n  utils.get(url).then(res => {\n    rowData = formatData(res)\n    // console.log(rowData)\n    callback()\n  }).catch(e => {\n    utils.alert('error', 'Error', 'An error occurred while getting data from the database, please try agian')\n    console.log(e)\n  })\n}\n\n/**\n * Write line for the influxdb query\n * @param {*} tags \n */\nfunction getInfluxLine(tags){\n  const desc = tags.prodDesc.split('\\'').join('\\\\\\'')\n  let url = utils.influxHost + 'query?pretty=true&db=smart_factory&q=select * from OrderPerformance' + ' where '\n  url += 'production_line=' + '\\'' + tags.prodLine + '\\'' + ' and '\n  url += 'order_id=' + '\\'' + tags.orderId + '\\'' + ' and '\n  url += 'product_desc=' + '\\'' + desc + '\\'' + ' and '\n  url += 'product_id=' + '\\'' + tags.prodId + '\\''\n\n  // console.log(url)\n  \n  return url\n}\n\n/**\n * The params may contain more than one row record\n * This is to fomrat the http response into a better structure\n * And also filter out the latest record\n * @param {*} res \n */\nfunction formatData(res){\n  let cols = res.results[0].series[0].columns\n  let rows = res.results[0].series[0].values\n  let row = rows[rows.length - 1]\n\n  let data = {}\n  for (let i = 0; i < cols.length; i++) {\n    const col = cols[i];\n    data[col] = row[i]\n  }\n  return data\n}\n\n/**\n * Add listener for the action selection\n * If edit clicked, go to the edit form with the current record data\n * If realease clicked, change record status to 'Ready'\n * If delete clicked, change record status to 'Deleted'\n */\nfunction addListeners() {\n  $(document).on('click', 'input[type=\"radio\"][name=\"order-mgt-scheduler-actions-radio\"]', e => {\n    \n    if (e.target.id === 'edit') {\n      showOrderEditingForm(rowData)\n    }else if (e.target.id === 'release') {\n      if (rowData.order_state === 'Ready') {\n        utils.alert('warning', 'Warning', 'Order has already been released')\n        closeForm()\n      }else {\n        updateOrder('Ready')\n      }\n    }else if (e.target.id === 'delete') {\n      updateOrder('Deleted')\n    }\n\n  })\n}\n\n/**\n * Remove listener for the action selection\n */\nfunction removeListeners() {\n  $(document).off('click', 'input[type=\"radio\"][name=\"order-mgt-scheduler-actions-radio\"]')\n}\n\n/**\n * Expect the action string (Normally are: 'Ready' or 'Deleted')\n * Use the action var passed in to write the line\n * Then update the record\n * Stop and prompt error if it fails\n * @param {*} action \n */\nfunction updateOrder(action) {\n  const line = writeInfluxLine(action)\n  const url = utils.influxHost + 'write?db=smart_factory'\n  utils.post(url, line).then(res => {\n    utils.alert('success', 'Success', 'Order has been marked as ' + action)\n    closeForm()\n  }).catch(e => {\n    utils.alert('error', 'Database Error', 'An error occurred while fetching data from the postgresql, please check the basebase connection')\n    closeForm()\n    console.log(e)\n  })\n}\n\n/**\n * Expect the status string (Normally are: 'Ready' or 'Deleted')\n * Then changed the status in the line with anything else unchanged\n * @param {*} status \n */\nfunction writeInfluxLine(status){\n  //For influxdb tag keys, must add a forward slash \\ before each space \n  let product_desc = rowData.product_desc.split(' ').join('\\\\ ')\n  let production_line = rowData.production_line.split(' ').join('\\\\ ')\n\n  let line = 'OrderPerformance,order_id=' + rowData.order_id + ',product_id=' + rowData.product_id + ',product_desc=' + product_desc + ',production_line=' + production_line + ' '\n\n  if (rowData.completion_qty !== null && rowData.completion_qty !== undefined) {\n    line += 'completion_qty=' + rowData.completion_qty + ','\n  }\n  if (rowData.machine_state !== null && rowData.machine_state !== undefined) {\n    line += 'machine_state=\"' + rowData.machine_state + '\"' + ','\n  }\n  if (rowData.scrap_qty !== null && rowData.scrap_qty !== undefined) {\n    line += 'scrap_qty=' + rowData.scrap_qty + ','\n  }\n  if (rowData.setpoint_rate !== null && rowData.setpoint_rate !== undefined) {\n    line += 'setpoint_rate=' + rowData.setpoint_rate + ','\n  }\n\n  line += 'order_state=\"' + status + '\"' + ','\n  line += 'order_date=\"' + rowData.order_date + '\"' + ','\n  line += 'order_qty=' + rowData.order_qty + ','\n  line += 'planned_rate=' + rowData.planned_rate\n\n//   console.log(line);\n  return line\n}\n\nexport { showActionOptionsForm }"]}